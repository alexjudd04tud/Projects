model Library

class Book
  attributes
    title : String
    author : String
    no_copies : Integer
    no_onshelf : Integer
  operations
    borrow()
    begin
        self.no_onshelf := self.no_onshelf - 1
    end
    pre copiesOnShelf: no_copies >0
    post: no_onshelf = no_onshelf@pre - 1

    return()
    begin
        self.no_onshelf := self.no_onshelf + 1
    end

end

class Copy
  attributes
    onLoan : Boolean
    reserved : Boolean
  operations
    borrow( m : Member)
    begin
        self.onLoan := true;
        self.book.borrow()
    end
    return( m : Member)
    begin
        self.onLoan := true;
        self.book.return()
    end
end    
    
class Member 
  attributes 
    name : String
    address : String
    no_onloan : Integer
    status : String
    fine : Integer
  operations
    borrow(c : Copy)
    begin
        insert (self, c) into HasBorrowed;
        self.no_onloan := self.no_onloan + 1;
        c.borrow(self);
    end


    return( c: Copy)
    begin
        self.no_onloan := self.no_onloan - 1;
        c.return(self);
        delete (self, c) from HasBorrowed;
    end

    reserve( c: Copy)
    begin
        insert (self, c) into HasReserved;
        c.reserved:= true;
    end
               
end
  
association HasReserved between
    Member[0..1] role reserver
    Copy[*] role copy
end

association HasBorrowed between
    Member[0..1] role borrower
    Copy[*] role borrowed
end

association CopyOf between
    Copy[1..*] role copies
    Book[1] role book
end


  
constraints


context Member::return(c:Copy)
    pre: c.onLoan = true
    pre: self.borrowed->includes(c)
	
context Member::reserve(c:Copy) 
    pre: c.reserved = false
    pre: c.onLoan = false
    post: self.copy->includes(c)
    post: c.reserved = true

	
context Member::borrow(c:Copy) 
    pre limit: self.no_onloan < 1
    pre: self.borrowed->excludes(c)
    pre: c.reserved = false or self.copy->includes(c)
    pre: c.onLoan = false
    post: c.onLoan = true
    post: self.borrowed->includes(c)